#!/usr/bin/env python3
"""
Monitor Layout Manager - CLI Wrapper
Shell-neutral CLI entry point for any shell.
"""

import os
import sys
import subprocess

def main():
    script_dir = os.path.dirname(os.path.abspath(__file__))
    project_dir = os.path.dirname(script_dir)
    
    # Check if we're in the right project directory
    cli_path = os.path.join(project_dir, 'cli', '__main__.py')
    if not os.path.exists(cli_path):
        print("‚ùå Error: Monitor Layout Manager not found")
        print(f"Expected CLI at: {cli_path}")
        sys.exit(1)
    
    # Find Python executable (prefer venv)
    venv_python = os.path.join(project_dir, '.venv', 'bin', 'python')
    if os.path.exists(venv_python):
        python_cmd = venv_python
    else:
        python_cmd = sys.executable
    
    # Build command
    cmd = [python_cmd, '-m', 'cli'] + sys.argv[1:]
    
    # Execute CLI with proper working directory
    try:
        result = subprocess.run(cmd, cwd=project_dir)
        sys.exit(result.returncode)
    except Exception as e:
        print(f"‚ùå Error running CLI: {e}")
        print("üí° Try: python3 -m venv .venv && .venv/bin/pip install -r requirements.txt")
        sys.exit(1)

if __name__ == "__main__":
    main()
